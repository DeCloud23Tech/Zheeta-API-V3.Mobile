// Mocks generated by Mockito 5.4.4 from annotations
// in zheeta/test/mock/authentication/data/datasource/country_datasource.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:zheeta/app/api/formatted_response.dart' as _i7;
import 'package:zheeta/authentication/data/datasource/country_datasource.dart'
    as _i5;
import 'package:zheeta/authentication/data/model/country_detail_model.dart'
    as _i4;
import 'package:zheeta/authentication/data/model/country_model.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCountryListModel_1 extends _i1.SmartFake
    implements _i3.CountryListModel {
  _FakeCountryListModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCountryDetailModel_2 extends _i1.SmartFake
    implements _i4.CountryDetailModel {
  _FakeCountryDetailModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [CountryDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockCountryDataSource extends _i1.Mock implements _i5.CountryDataSource {
  MockCountryDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.Either<_i7.InvalidResponse, Map<String, dynamic>>>
      getAllCountries() => (super.noSuchMethod(
            Invocation.method(
              #getAllCountries,
              [],
            ),
            returnValue: _i6.Future<
                    _i2
                    .Either<_i7.InvalidResponse, Map<String, dynamic>>>.value(
                _FakeEither_0<_i7.InvalidResponse, Map<String, dynamic>>(
              this,
              Invocation.method(
                #getAllCountries,
                [],
              ),
            )),
          ) as _i6
              .Future<_i2.Either<_i7.InvalidResponse, Map<String, dynamic>>>);

  @override
  _i6.Future<
      _i2.Either<_i7.InvalidResponse, Map<String, dynamic>>> getCountryDetails(
          String? countryCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCountryDetails,
          [countryCode],
        ),
        returnValue: _i6.Future<
                _i2.Either<_i7.InvalidResponse, Map<String, dynamic>>>.value(
            _FakeEither_0<_i7.InvalidResponse, Map<String, dynamic>>(
          this,
          Invocation.method(
            #getCountryDetails,
            [countryCode],
          ),
        )),
      ) as _i6.Future<_i2.Either<_i7.InvalidResponse, Map<String, dynamic>>>);

  @override
  _i6.Future<_i3.CountryListModel> getAllCountriesNew() => (super.noSuchMethod(
        Invocation.method(
          #getAllCountriesNew,
          [],
        ),
        returnValue:
            _i6.Future<_i3.CountryListModel>.value(_FakeCountryListModel_1(
          this,
          Invocation.method(
            #getAllCountriesNew,
            [],
          ),
        )),
      ) as _i6.Future<_i3.CountryListModel>);

  @override
  _i6.Future<_i4.CountryDetailModel> getCountryDetailsNew(
          String? countryCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCountryDetailsNew,
          [countryCode],
        ),
        returnValue:
            _i6.Future<_i4.CountryDetailModel>.value(_FakeCountryDetailModel_2(
          this,
          Invocation.method(
            #getCountryDetailsNew,
            [countryCode],
          ),
        )),
      ) as _i6.Future<_i4.CountryDetailModel>);
}
