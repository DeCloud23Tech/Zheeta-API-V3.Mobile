// Mocks generated by Mockito 5.4.4 from annotations
// in zheeta/test/mock/authentication/data/datasource/user_auth_datasource.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:zheeta/app/api/formatted_response.dart' as _i5;
import 'package:zheeta/authentication/data/datasource/user_auth_datasource.dart'
    as _i3;
import 'package:zheeta/authentication/data/request/change_password_request.dart'
    as _i9;
import 'package:zheeta/authentication/data/request/login_oauth_request.dart'
    as _i11;
import 'package:zheeta/authentication/data/request/login_request.dart' as _i7;
import 'package:zheeta/authentication/data/request/register_staff_request.dart'
    as _i8;
import 'package:zheeta/authentication/data/request/register_user_request.dart'
    as _i6;
import 'package:zheeta/authentication/data/request/reset_password_request.dart'
    as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserAuthDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserAuthDataSource extends _i1.Mock
    implements _i3.UserAuthDataSource {
  MockUserAuthDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>> registerUser(
          _i6.RegisterUserRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [request],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>.value(
            _FakeEither_0<_i5.InvalidResponse, Map<String, dynamic>>(
          this,
          Invocation.method(
            #registerUser,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>);

  @override
  _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>> login(
          _i7.LoginRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [request],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>.value(
            _FakeEither_0<_i5.InvalidResponse, Map<String, dynamic>>(
          this,
          Invocation.method(
            #login,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>> registerStaff(
          _i8.RegisterStaffRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #registerStaff,
          [request],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>.value(
            _FakeEither_0<_i5.InvalidResponse, Map<String, dynamic>>(
          this,
          Invocation.method(
            #registerStaff,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>> changePassword(
          _i9.ChangePasswordRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [request],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>.value(
            _FakeEither_0<_i5.InvalidResponse, Map<String, dynamic>>(
          this,
          Invocation.method(
            #changePassword,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>);

  @override
  _i4.Future<
      _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>> resetPassword(
          _i10.ResetPasswordRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [request],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>.value(
            _FakeEither_0<_i5.InvalidResponse, Map<String, dynamic>>(
          this,
          Invocation.method(
            #resetPassword,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>);

  @override
  _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>> loginOAuth(
          _i11.LoginOAuthRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginOAuth,
          [request],
        ),
        returnValue: _i4.Future<
                _i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>.value(
            _FakeEither_0<_i5.InvalidResponse, Map<String, dynamic>>(
          this,
          Invocation.method(
            #loginOAuth,
            [request],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.InvalidResponse, Map<String, dynamic>>>);
}
